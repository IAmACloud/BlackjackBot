how do I bind this repository to my ros noetic-robot container

BlackjackBot repository to a ROS Noetic container. Here's how to do it:

1. First, make sure you have Docker installed and running on your Windows machine.

2. Create a new file called `docker-compose.yml` in your BlackjackBot repository root:

````yaml
version: '3'
services:
  ros_noetic:
    image: osrf/ros:noetic-desktop-full
    container_name: blackjack_bot
    environment:
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1
    volumes:
      - .:/root/catkin_ws/src/blackjack_bot
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    network_mode: host
    command: bash -c "source /opt/ros/noetic/setup.bash && cd /root/catkin_ws && catkin_make && source devel/setup.bash && bash"
    stdin_open: true
    tty: true
````

3. Create a `.dockerignore` file to exclude unnecessary files:

````text
.git
.gitignore
*.pyc
__pycache__
````

4. Open PowerShell and navigate to your repository:

```powershell
cd c:\Users\naido\Documents\ChalmersCourses\TIF160_HumanoidRobotics\ProjectRepo\BlackjackBot
```

5. Start the container:

```powershell
docker-compose up -d
```

6. Connect to the container:

```powershell
docker exec -it blackjack_bot bash
```

7. Inside the container, create the necessary ROS package structure:

```bash
cd /root/catkin_ws/src/blackjack_bot
catkin_create_pkg blackjack_bot std_msgs rospy
```

8. Move your Python files into the correct ROS package structure and make sure to make them executable:

```bash
chmod +x /root/catkin_ws/src/blackjack_bot/scripts/*.py
```

9. Build your package:

```bash
cd /root/catkin_ws
catkin_make
source devel/setup.bash
```

Now your repository is properly bound to the ROS Noetic container and you can run your ROS nodes. Remember to:

- Place your Python scripts in the `scripts` directory of your ROS package
- Create a proper `package.xml` and `CMakeLists.txt` for your ROS package
- Use `rosrun` or `roslaunch` to execute your nodes

To stop the container when you're done:

```powershell
docker-compose down
```



What I have learned:

make a catkin ws

source every single time you make a terminal OR do it again when you catkin_make
create a package with the proper dependencies inside the catkin ws source folder
create a scripts folder in the package
put the python scripts in and then make sure to change them to executable
add in the proper CMakeLists.txt changes for running them as python scripts - also may need to add again for runtime?
go back to catkin ws top level folder and run catkin make - don't forget to source again

running the nodes:
open a terminal in the ros container
source it
run roscore
open another terminal, source it
run "rosrun PACKAGE_NAME SCRIPT_NAME.py"
do another terminal for each script you want to run and follow the same last 2 steps

ctrl+c to end the node - have to do each separately
